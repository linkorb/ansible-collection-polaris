---
- name: 'Establish facts about local and remote stack paths'
  set_fact:
    path_to_manifest: '{{ path_to_stacks_manifest | default(inventory_dir ~ "/stacks/manifest.yaml") }}'
    local_path_to_stacks: '{{ path_to_stacks_on_control_node | default(inventory_dir ~ "/stacks/") }}'
    remote_path_to_stacks: '{{ path_to_stacks_on_managed_node | default("/opt/stacks/") }}'

- name: 'Read the stack manifest'
  set_fact:
    manifest: '{{ lookup("template", path_to_manifest) | from_yaml }}'

- name: 'Initialize a list of selected stacks to deploy'
  set_fact:
    stacks: []
    selected_stacks: []

- name: 'Select stacks to deploy on this host'
  set_fact:
    selected_stacks: '{{ selected_stacks + [item] }}'
  loop: '{{ manifest.stacks }}'
  when:
  - item.host == inventory_hostname
  - tagged is not defined or (item.tag is defined and tagged == item.tag)

- name: 'Enrich selected stacks with path info'
  set_fact:
    stacks: '{{ stacks + [item | combine({"local_path": local_path_to_stacks~item.name, "remote_path": remote_path_to_stacks~item.name})] }}'
  loop: '{{ selected_stacks }}'

- name: 'Debug: manifest.stacks'
  ansible.builtin.debug:
    var: manifest.stacks
    verbosity: 1
  when: stacks | length

- name: 'Debug: stacks (selected and enriched)'
  ansible.builtin.debug:
    var: stacks
  when: stacks | length

- name: 'Deploy stacks'
  include_tasks: deploy-stack.yml
  loop: '{{ stacks }}'
  loop_control:
    label: 'Deploy stack: [{{ stack.name }}]'
    loop_var: stack
