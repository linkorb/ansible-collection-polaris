- name: Docker engine installation
  hosts: '{{ target_group | default("polaris_hosts") }}'
  become: true
  tags:
    - polaris.container
    - polaris.container.docker_engine
  tasks:
    - name: Host has dependencies of ansible modules
      ansible.builtin.include_tasks: tasks/install_module_dependencies.yaml
    - name: Docker is installed in the usual manner
      ansible.builtin.import_role:
        name: geerlingguy.docker
      vars:
        docker_daemon_options:
          metrics-addr: '0.0.0.0:9323'
          log-driver: json-file
          log-opts: { 'max-size': '100m', 'max-file': '6' }
      when: has_big_disk is not defined or not has_big_disk
    - name: Docker is installed with its data-root on a big disk
      ansible.builtin.import_role:
        name: geerlingguy.docker
      vars:
        docker_daemon_options:
          data-root: /mnt/bigdisk
          metrics-addr: '0.0.0.0:9323'
          log-driver: json-file
          log-opts: { 'max-size': '200m', 'max-file': '6' }
      when: has_big_disk is defined and has_big_disk

- name: Docker config
  hosts: '{{ target_group | default("polaris_hosts") }}'
  tags:
    - polaris.container
    - polaris.container.docker_engine
  tasks:
    - name: Adding docker users (for use without sudo)
      user:
        name: "{{ item }}"
        append: true
        groups: docker
      become: true
      with_items: '{{ polaris_docker_users }}'
    - name: Install and enable juicedata/juicefs volume plugin
      community.docker.docker_plugin:
        plugin_name: "juicedata/juicefs:1.1.1"
        state: enable
        alias: juicefs
      become: true

- name: Docker registry login
  hosts: '{{ target_group | default("polaris_hosts") }}'
  tags:
    - polaris.container
    - polaris.container.docker_engine
    - polaris.container.docker_engine.registry_login
  tasks:
    - name: Login to the Docker Container Registry
      community.general.docker_login:
        registry: "{{ polaris_docker_registry|default('https://ghcr.io/') }}"
        username: "{{ polaris_docker_registry_username }}"
        password: "{{ polaris_docker_registry_pat }}"
      become: true
